plugins {
    id 'io.franzbecker.gradle-lombok' version '1.12'
    id 'nebula.provided-base' version '3.0.3'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id "com.jfrog.bintray" version "1.8.0" apply false
}

subprojects {
    apply plugin: 'nebula.provided-base'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply from: "$rootDir/gradle/publishing.gradle"
    apply from: "$rootDir/gradle/bintray.gradle"

    group = "org.testcontainers"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'

    lombok {
	    version = '1.16.20'
    }

    task delombok(type: io.franzbecker.gradle.lombok.task.DelombokTask) {
        def outputDir = file("$buildDir/delombok")
        outputs.dir(outputDir)
        for (srcDir in project.sourceSets.main.java.srcDirs) {
            inputs.dir(srcDir)
            args(srcDir, "-d", outputDir)
        }
    }

    project.tasks.sourceJar.from(delombok)

    task release(dependsOn: bintrayUpload)

    test {
        testLogging {
            displayGranularity 1
            showStackTraces = true
            exceptionFormat = 'full'
            events "STARTED", "PASSED", "FAILED", "SKIPPED"
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        testCompile 'ch.qos.logback:logback-classic:1.2.3'
    }
}
